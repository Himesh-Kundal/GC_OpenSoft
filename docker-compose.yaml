version: "3.9"

networks:
  internal_network_GC: # Backend & Redis only
    driver: bridge
  public_network_GC: # Exposed services (Frontend & Nginx)
    driver: bridge

services:
  redis:
    image: redis:latest
    container_name: GC_redis
    restart: always
    ports:
      - "6379:6379"
    networks:
      - internal_network_GC
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 1s
      retries: 2

  postgres:
    image: postgres:latest
    container_name: GC_postgres
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: db
    ports:
      - "5432:5432"
    networks:
      - internal_network_GC
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user"]
      interval: 5s
      timeout: 2s
      retries: 3
      
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: GC_go_backend
    restart: always
    environment:
      - REDIS_ADDR=redis:6379
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=user
      - DB_PASSWORD=password
      - DB_NAME=db
      - PORT=8080
    depends_on:
      redis:
        condition: service_healthy
    ports:
      - "8080:8080"
    networks:
      - internal_network_GC
      - public_network_GC
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 1s
      timeout: 1s
      retries: 2

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: GC_frontend
    restart: always
    ports:
      - "80:80"
    networks:
      - public_network_GC
    depends_on:
      backend:
        condition: service_healthy
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 1s
      timeout: 1s
      retries: 2

volumes:
  GC_frontend_dist:
